#En la primera línea estamos indicando el nivel mínimo de logging y los appenders que vamos a emplear
#La segunda línea sirve para configurar en qué nivel se empezaran a mostrar las
#advertencias tanto por consola como a almacenarse en el fichero.
#con la tercera línea evitamos que los appenders hereden la configuración de sus
#appenders padres

log4j.rootLogger= ALL, stdout, file
log4j.logger.infoLogger=ALL
log4j.additivity.infoLogger = false

#Crear la configuración para imprimir mensajes por consola

#En la primera línea indicamos qué tipo de logger será, haciendo referencia a la
#clase que imprimirá los mensajes
#En la segunda línea, le decimos que queremos imprimirlo directamente por la consola.
#Y las dos últimas líneas son para configurar la plantilla que tendrá cada mensaje.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n

#Configuracion del appender
#En la primera línea configuramos la clase como RollingFileAppender, lo que
#significa que se crearán distintos ficheros al cumplirse determinadas condiciones
#que tratamos en las siguientes líneas.
#En la segunda linea indicamos el nombre (con ruta incluida) que queremos que
#tenga nuestro fichero de log.
#Con MaxFileSize establecemos el tamaño máximo que tendrá nuestro fichero, y
#con MaxBackupIndex indicamos cuántos archivos podemos tener usando el mismo log.

log4j.appender.file=org.apache.log4j.RollingFileAppender
#Cambiarle el nombre de avisos segun como se llame el archivo.
log4j.appender.file.File=logs.log 
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n
